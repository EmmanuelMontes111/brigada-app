name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
      - master

    # on: push    # Default will running for every branch.

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      # Get the code from the repository.
      - name: Checkout repo
        uses: actions/checkout@v2

      # Setup flutter environment in order to build the Android app.
      - name: Download flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.0.4'

      # The web version of the application is built.
      - name: Build web project
        run: flutter build web

      # The generated files are uploaded in the build / web path as artifacts, to be able to download them later, with the name "web artifacts".
      - name: Upload web artifact
        uses: actions/upload-artifact@master
        with:
          name: web artifacts
          path: build/web

      # Deploy flow begins
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_BRIGADA_POLI }}'
          channelId: live
          projectId: brigada-poli
          path: "https://brigada-poli-default-rtdb.firebaseio.com/"
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      # Get flutter dependencies.
      - run: flutter pub get

      # Check for any formatting issues in the code.
      #- run: flutter format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .

      # Run widget tests for our flutter project.
      - run: flutter test

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - uses: stelynx/dart-full-coverage@v1.0.5
        with:
          package: egakcap
          ignore: "*_state.dart, do_not_import_me.dart"
      - run: flutter pub get
      - run: flutter packages pub run build_runner build
      - run: flutter build aot
      - run: flutter analyze
      - run: flutter test --coverage .
      - uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}